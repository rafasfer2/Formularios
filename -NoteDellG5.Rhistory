usuario = "juliana",
senha_hash = digest::digest("juliana123", algo = "sha256"),
nome = "Juliana Pereira Cruz Menezes",
email_institucional = "crmrecpcao@gmail.com",
unidade = "CRM",
funcao = "administrativo",
ativo = 1,
data_contratacao = Sys.Date(),
perfil = "profissional"
)
DBI::dbWriteTable(db, "usuarios", novo_usuario, append = TRUE)
novo_usuario <- data.frame(
cpf = "123.456.789-00",  # Substitua por um CPF real ou institucional
usuario = "juliana",
senha_hash = digest::digest("juliana123", algo = "sha256"),
nome = "Juliana Pereira Cruz Menezes",
email_institucional = "crmrecpcao@gmail.com",
unidade = "CRM",
funcao = "administrativo",
ativo = 1,
data_contratacao = Sys.Date(),
perfil = "profissional"
)
DBI::dbWriteTable(db, "usuarios", novo_usuario, append = TRUE)
novo_usuario <- data.frame(
cpf = "077.481.136-61",  # Substitua por um CPF real ou institucional
usuario = "ana",
senha_hash = digest::digest("ana123", algo = "sha256"),
nome = "Ana Paula Aparecida Silva Santos Fernandes",
email_institucional = "anapaulasfer2@gmail.com",
unidade = "CRM",
funcao = "administrativo",
ativo = 1,
data_contratacao = Sys.Date(),
perfil = "profissional"
)
DBI::dbWriteTable(db, "usuarios", novo_usuario, append = TRUE)
library(googlesheets4)
sheet_url <- "https://docs.google.com/spreadsheets/d/15n6E6eQLdYf_aWTB0JUgLUrXA7MFxWMrYhp6qpQwBjw/edit?resourcekey=&gid=869864524#gid=869864524"
dados_forms <- read_sheet(sheet_url)
dados_forms
dados_forms |> head()
dados_forms |> colnames()
dados_forms %>%
rename(
data_hora_sistema = `Carimbo de data/hora`,
email_preenchedor = `Endereço de e-mail`,
rede_atendimento = `Rede de Atendimento SEMMU`,
profissional = `Profissional Responsável pelo Preenchimento`,
data_cadastro = `Data do Cadastro`,
nome_completo = `Nome Completo da Assistida`,
cpf = `Número do CPF`,
telefone = `(DDD) Telefone`,
rg = `Número do RG`,
tipo_demanda = `Tipo de Demanda`,
unidade_origem = `Unidade de Origem/Destino`,
rede_intersetorial = `Rede Intersetorial`,
nome_social = `Nome Social`,
data_nascimento = `Data de Nascimento`,
idade = `Idade`,
naturalidade = `Naturalidade (Código IBGE)`,
uf = `UF`,
gestante = `Gestante`,
raca_cor = `Raça/Cor`,
escolaridade = `Escolaridade`,
atividade_laboral = `Atividade Laboral`,
estado_civil = `Situação Conjugal/Estado Civil`,
deficiencia = `Deficiência/transtorno`,
orientacao_sexual = `Orientação Sexual`,
identidade_genero = `Identidade de gênero`,
municipio_residencia = `Município de Residência (Código IBGE)`,
bairro = `Bairro`,
logradouro = `Logradouro (Rua, Avenida,...)`,
numero = `Número`,
quadra = `Quadra`,
lote = `Lote`,
complemento = `Complemento (apto., casa, ...)`,
polo_visitado = `Polo Visitado`,
zona = `Zona`,
quantos_filhos = `Quantos filhos possui?`,
condicao_moradia = `Condição de Moradia`,
ubs_referencia = `UBS de Referência`,
renda_media = `Renda Média`,
beneficio_social = `Benefício Social`,
valor_beneficio = `Valor de Benefício Social (R$)`,
valor_renda_propria = `Valor de Renda Própria (R$)`,
valor_renda_pensao = `Valor de Renda Pensão (R$)`
)
library(dplyr)
dados_forms %>%
rename(
data_hora_sistema = `Carimbo de data/hora`,
email_preenchedor = `Endereço de e-mail`,
rede_atendimento = `Rede de Atendimento SEMMU`,
profissional = `Profissional Responsável pelo Preenchimento`,
data_cadastro = `Data do Cadastro`,
nome_completo = `Nome Completo da Assistida`,
cpf = `Número do CPF`,
telefone = `(DDD) Telefone`,
rg = `Número do RG`,
tipo_demanda = `Tipo de Demanda`,
unidade_origem = `Unidade de Origem/Destino`,
rede_intersetorial = `Rede Intersetorial`,
nome_social = `Nome Social`,
data_nascimento = `Data de Nascimento`,
idade = `Idade`,
naturalidade = `Naturalidade (Código IBGE)`,
uf = `UF`,
gestante = `Gestante`,
raca_cor = `Raça/Cor`,
escolaridade = `Escolaridade`,
atividade_laboral = `Atividade Laboral`,
estado_civil = `Situação Conjugal/Estado Civil`,
deficiencia = `Deficiência/transtorno`,
orientacao_sexual = `Orientação Sexual`,
identidade_genero = `Identidade de gênero`,
municipio_residencia = `Município de Residência (Código IBGE)`,
bairro = `Bairro`,
logradouro = `Logradouro (Rua, Avenida,...)`,
numero = `Número`,
quadra = `Quadra`,
lote = `Lote`,
complemento = `Complemento (apto., casa, ...)`,
polo_visitado = `Polo Visitado`,
zona = `Zona`,
quantos_filhos = `Quantos filhos possui?`,
condicao_moradia = `Condição de Moradia`,
ubs_referencia = `UBS de Referência`,
renda_media = `Renda Média`,
beneficio_social = `Benefício Social`,
valor_beneficio = `Valor de Benefício Social (R$)`,
valor_renda_propria = `Valor de Renda Própria (R$)`,
valor_renda_pensao = `Valor de Renda Pensão (R$)`
)
dados_forms %>%
select(
data_hora_sistema = `Carimbo de data/hora`,
email_preenchedor = `Endereço de e-mail`,
rede_atendimento = `Rede de Atendimento SEMMU`,
profissional = `Profissional Responsável pelo Preenchimento`,
data_cadastro = `Data do Cadastro`,
nome_completo = `Nome Completo da Assistida`,
cpf = `Número do CPF`,
telefone = `(DDD) Telefone`,
rg = `Número do RG`,
tipo_demanda = `Tipo de Demanda`,
unidade_origem = `Unidade de Origem/Destino`,
rede_intersetorial = `Rede Intersetorial`,
nome_social = `Nome Social`,
data_nascimento = `Data de Nascimento`,
idade = `Idade`,
naturalidade = `Naturalidade (Código IBGE)`,
uf = `UF`,
gestante = `Gestante`,
raca_cor = `Raça/Cor`,
escolaridade = `Escolaridade`,
atividade_laboral = `Atividade Laboral`,
estado_civil = `Situação Conjugal/Estado Civil`,
deficiencia = `Deficiência/transtorno`,
orientacao_sexual = `Orientação Sexual`,
identidade_genero = `Identidade de gênero`,
municipio_residencia = `Município de Residência (Código IBGE)`,
bairro = `Bairro`,
logradouro = `Logradouro (Rua, Avenida,...)`,
numero = `Número`,
quadra = `Quadra`,
lote = `Lote`,
complemento = `Complemento (apto., casa, ...)`,
polo_visitado = `Polo Visitado`,
zona = `Zona`,
quantos_filhos = `Quantos filhos possui?`,
condicao_moradia = `Condição de Moradia`,
ubs_referencia = `UBS de Referência`,
renda_media = `Renda Média`,
beneficio_social = `Benefício Social`,
valor_beneficio = `Valor de Benefício Social (R$)`,
valor_renda_propria = `Valor de Renda Própria (R$)`,
valor_renda_pensao = `Valor de Renda Pensão (R$)`
)
library(googlesheets4)
sheet_url <- "https://docs.google.com/spreadsheets/d/15n6E6eQLdYf_aWTB0JUgLUrXA7MFxWMrYhp6qpQwBjw/edit?resourcekey=&gid=869864524#gid=869864524"
dados_forms <- read_sheet(sheet_url)
library(dplyr)
library(googlesheets4)
sheet_url <- "https://docs.google.com/spreadsheets/d/15n6E6eQLdYf_aWTB0JUgLUrXA7MFxWMrYhp6qpQwBjw/edit?resourcekey=&gid=869864524#gid=869864524"
dados_forms <- read_sheet(sheet_url)
sheet_url <- "https://docs.google.com/spreadsheets/d/15n6E6eQLdYf_aWTB0JUgLUrXA7MFxWMrYhp6qpQwBjw/edit?resourcekey=&gid=869864524#gid=869864524"
dados_forms <- read_sheet(sheet_url)
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
install.packages("httr")
library(httr)
res <- GET(
url = "https://cadastroinicial.siammulher.com.br",
add_headers(
`CF-Access-Client-Id` = "8b3458a81a9a2a48947c215b12d49cbc.access",
`CF-Access-Client-Secret` = "7ced6f12337dad3b8495c824051d28f31de008fb0488bf3cba99c6979217720b"
)
)
# Verifique o status
status_code(res)
status_code(res)
content(res, "text")
library(httr)
res <- GET(
url = "https://cadastroinicial.siammulher.com.br",
add_headers(
`CF-Access-Client-Id` = "8b3458a81a9a2a48947c215b12d49cbc.access",
`CF-Access-Client-Secret` = "7ced6f12337dad3b8495c824051d28f31de008fb0488bf3cba99c6979217720b"
)
)
# Verifique o status
status_code(res)
content(res, "text")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
getwd()
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
install.packages(c("forcats", "rmarkdown"))
shiny::runApp()
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
# Lista de pacotes usados no SIAM
pacotes <- c(
"shiny",           # Framework principal
"shinyjs",         # Interações JS
"bslib",           # Temas e layout
"DT",              # Tabelas dinâmicas
"DBI",             # Interface de banco de dados
"RSQLite",         # Suporte a SQLite local
"RPostgres",       # Conexão com Supabase (PostgreSQL)
"digest",          # Criptografia de senha
"jsonlite",        # Manipulação de JSON
"lubridate",       # Datas e horários
"stringr",         # Manipulação de strings
"readr",           # Leitura de arquivos
"dplyr",           # Manipulação de dados
"tidyr",           # Organização de dados
"purrr"            # Programação funcional
)
# Instala apenas os que ainda não estão presentes
instalar <- pacotes[!pacotes %in% installed.packages()[, "Package"]]
if (length(instalar) > 0) {
install.packages(instalar, repos = "https://cloud.r-project.org")
message("✅ Pacotes instalados com sucesso: ", paste(instalar, collapse = ", "))
} else {
message("🎉 Todos os pacotes já estavam instalados.")
}
# Carrega todos os pacotes
invisivel <- lapply(pacotes, function(pkg) {
suppressPackageStartupMessages(library(pkg, character.only = TRUE))
})
runApp()
install.packages("RSQLite")
runApp()
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
#shinyApp(ui = ui, server = server)
shiny::runApp("C:/Users/rafas/OneDrive/Documentos/github/SEMMU Arquivados/Formularios", port = 5250, host = "127.0.0.1")
library(googlesheets4)
install.packages("googlesheets4")
library(googlesheets4)
sheet_url <- "https://docs.google.com/spreadsheets/d/15n6E6eQLdYf_aWTB0JUgLUrXA7MFxWMrYhp6qpQwBjw/edit?resourcekey=&gid=869864524#gid=869864524"
dados_forms <- read_sheet(sheet_url)
dados_forms %>%
select(
data_hora_sistema = `Carimbo de data/hora`,
email_preenchedor = `Endereço de e-mail`,
rede_atendimento = `Rede de Atendimento SEMMU`,
profissional = `Profissional Responsável pelo Preenchimento`,
data_cadastro = `Data do Cadastro`,
nome_completo = `Nome Completo da Assistida`,
cpf = `Número do CPF`,
telefone = `(DDD) Telefone`,
rg = `Número do RG`,
tipo_demanda = `Tipo de Demanda`,
unidade_origem = `Unidade de Origem/Destino`,
rede_intersetorial = `Rede Intersetorial`,
nome_social = `Nome Social`,
data_nascimento = `Data de Nascimento`,
idade = `Idade`,
naturalidade = `Naturalidade (Código IBGE)`,
uf = `UF`,
gestante = `Gestante`,
raca_cor = `Raça/Cor`,
escolaridade = `Escolaridade`,
atividade_laboral = `Atividade Laboral`,
estado_civil = `Situação Conjugal/Estado Civil`,
deficiencia = `Deficiência/transtorno`,
orientacao_sexual = `Orientação Sexual`,
identidade_genero = `Identidade de gênero`,
municipio_residencia = `Município de Residência (Código IBGE)`,
bairro = `Bairro`,
logradouro = `Logradouro (Rua, Avenida,...)`,
numero = `Número`,
quadra = `Quadra`,
lote = `Lote`,
complemento = `Complemento (apto., casa, ...)`,
polo_visitado = `Polo Visitado`,
zona = `Zona`,
quantos_filhos = `Quantos filhos possui?`,
condicao_moradia = `Condição de Moradia`,
ubs_referencia = `UBS de Referência`,
renda_media = `Renda Média`,
beneficio_social = `Benefício Social`,
valor_beneficio = `Valor de Benefício Social (R$)`,
valor_renda_propria = `Valor de Renda Própria (R$)`,
valor_renda_pensao = `Valor de Renda Pensão (R$)`
)
library(tidyverse)
install.packages("tidyverse")
dados_forms %>%
select(
data_hora_sistema = `Carimbo de data/hora`,
email_preenchedor = `Endereço de e-mail`,
rede_atendimento = `Rede de Atendimento SEMMU`,
profissional = `Profissional Responsável pelo Preenchimento`,
data_cadastro = `Data do Cadastro`,
nome_completo = `Nome Completo da Assistida`,
cpf = `Número do CPF`,
telefone = `(DDD) Telefone`,
rg = `Número do RG`,
tipo_demanda = `Tipo de Demanda`,
unidade_origem = `Unidade de Origem/Destino`,
rede_intersetorial = `Rede Intersetorial`,
nome_social = `Nome Social`,
data_nascimento = `Data de Nascimento`,
idade = `Idade`,
naturalidade = `Naturalidade (Código IBGE)`,
uf = `UF`,
gestante = `Gestante`,
raca_cor = `Raça/Cor`,
escolaridade = `Escolaridade`,
atividade_laboral = `Atividade Laboral`,
estado_civil = `Situação Conjugal/Estado Civil`,
deficiencia = `Deficiência/transtorno`,
orientacao_sexual = `Orientação Sexual`,
identidade_genero = `Identidade de gênero`,
municipio_residencia = `Município de Residência (Código IBGE)`,
bairro = `Bairro`,
logradouro = `Logradouro (Rua, Avenida,...)`,
numero = `Número`,
quadra = `Quadra`,
lote = `Lote`,
complemento = `Complemento (apto., casa, ...)`,
polo_visitado = `Polo Visitado`,
zona = `Zona`,
quantos_filhos = `Quantos filhos possui?`,
condicao_moradia = `Condição de Moradia`,
ubs_referencia = `UBS de Referência`,
renda_media = `Renda Média`,
beneficio_social = `Benefício Social`,
valor_beneficio = `Valor de Benefício Social (R$)`,
valor_renda_propria = `Valor de Renda Própria (R$)`,
valor_renda_pensao = `Valor de Renda Pensão (R$)`
)
library(googlesheets4)
library(tidyverse)
sheet_url <- "https://docs.google.com/spreadsheets/d/15n6E6eQLdYf_aWTB0JUgLUrXA7MFxWMrYhp6qpQwBjw/edit?resourcekey=&gid=869864524#gid=869864524"
dados_forms <- read_sheet(sheet_url)
dados_forms %>%
select(
data_hora_sistema = `Carimbo de data/hora`,
email_preenchedor = `Endereço de e-mail`,
rede_atendimento = `Rede de Atendimento SEMMU`,
profissional = `Profissional Responsável pelo Preenchimento`,
data_cadastro = `Data do Cadastro`,
nome_completo = `Nome Completo da Assistida`,
cpf = `Número do CPF`,
telefone = `(DDD) Telefone`,
rg = `Número do RG`,
tipo_demanda = `Tipo de Demanda`,
unidade_origem = `Unidade de Origem/Destino`,
rede_intersetorial = `Rede Intersetorial`,
nome_social = `Nome Social`,
data_nascimento = `Data de Nascimento`,
idade = `Idade`,
naturalidade = `Naturalidade (Código IBGE)`,
uf = `UF`,
gestante = `Gestante`,
raca_cor = `Raça/Cor`,
escolaridade = `Escolaridade`,
atividade_laboral = `Atividade Laboral`,
estado_civil = `Situação Conjugal/Estado Civil`,
deficiencia = `Deficiência/transtorno`,
orientacao_sexual = `Orientação Sexual`,
identidade_genero = `Identidade de gênero`,
municipio_residencia = `Município de Residência (Código IBGE)`,
bairro = `Bairro`,
logradouro = `Logradouro (Rua, Avenida,...)`,
numero = `Número`,
quadra = `Quadra`,
lote = `Lote`,
complemento = `Complemento (apto., casa, ...)`,
polo_visitado = `Polo Visitado`,
zona = `Zona`,
quantos_filhos = `Quantos filhos possui?`,
condicao_moradia = `Condição de Moradia`,
ubs_referencia = `UBS de Referência`,
renda_media = `Renda Média`,
beneficio_social = `Benefício Social`,
valor_beneficio = `Valor de Benefício Social (R$)`,
valor_renda_propria = `Valor de Renda Própria (R$)`,
valor_renda_pensao = `Valor de Renda Pensão (R$)`
)
dados_forms %>%
select(
data_hora_sistema = `Carimbo de data/hora`,
email_preenchedor = `Endereço de e-mail`,
rede_atendimento = `Rede de Atendimento SEMMU`,
profissional = `Profissional Responsável pelo Preenchimento`,
data_cadastro = `Data do Cadastro`,
nome_completo = `Nome Completo da Assistida`,
cpf = `Número do CPF`,
telefone = `(DDD) Telefone`,
rg = `Número do RG`,
tipo_demanda = `Tipo de Demanda`,
unidade_origem = `Unidade de Origem/Destino`,
rede_intersetorial = `Rede Intersetorial`,
obs_localidade = `Observações de localidade`,
rede_semmu = `Rede SEMMU`,
nome_social = `Nome Social`,
data_nascimento = `Data de Nascimento`,
idade = `Idade`,
naturalidade = `Naturalidade (Código IBGE)`,
uf = `UF`,
gestante = `Gestante`,
raca_cor = `Raça/Cor`,
escolaridade = `Escolaridade`,
atividade_laboral = `Atividade Laboral`,
estado_civil = `Situação Conjugal/Estado Civil`,
deficiencia = `Deficiência/transtorno`,
orientacao_sexual = `Orientação Sexual`,
identidade_genero = `Identidade de gênero`,
municipio_residencia = `Município de Residência (Código IBGE)`,
bairro = `Bairro`,
logradouro = `Logradouro (Rua, Avenida,...)`,
numero = `Número`,
quadra = `Quadra`,
lote = `Lote`,
complemento = `Complemento (apto., casa, ...)`,
polo_visitado = `Polo Visitado`,
zona = `Zona`,
quantos_filhos = `Quantos filhos possui?`,
condicao_moradia = `Condição de Moradia`,
ubs_referencia = `UBS de Referência`,
renda_media = `Renda Média`,
beneficio_social = `Benefício Social`,
valor_beneficio = `Valor de Benefício Social (R$)`,
valor_renda_propria = `Valor de Renda Própria (R$)`,
valor_renda_pensao = `Valor de Renda Pensão (R$)`
)
# Lista de pacotes usados no SIAM
pacotes <- c(
# Interface e layout
"shiny",           # Framework principal
"shinyjs",         # Interações JS
"bslib",           # Temas e layout
"DT",              # Tabelas dinâmicas
# Banco de dados
"DBI",             # Interface de banco de dados
"RSQLite",         # Suporte a SQLite local
"RPostgres",       # Conexão com Supabase (PostgreSQL)
# Segurança e formatos
"digest",          # Criptografia de senha
"jsonlite",        # Manipulação de JSON
# Manipulação de dados
"lubridate",       # Datas e horários
"stringr",         # Manipulação de strings
"readr",           # Leitura de arquivos
"dplyr",           # Manipulação de dados
"tidyr",           # Organização de dados
"purrr",           # Programação funcional
# Integração externa
"googlesheets4"    # Coleta de dados do Google Sheets
)
# Instala apenas os que ainda não estão presentes
instalar <- pacotes[!pacotes %in% installed.packages()[, "Package"]]
if (length(instalar) > 0) {
install.packages(instalar, repos = "https://cloud.r-project.org")
message("✅ Pacotes instalados com sucesso: ", paste(instalar, collapse = ", "))
} else {
message("🎉 Todos os pacotes já estavam instalados.")
}
# Carrega todos os pacotes
invisivel <- lapply(pacotes, function(pkg) {
suppressPackageStartupMessages(library(pkg, character.only = TRUE))
})
message("📦 Todos os pacotes carregados: ", paste(pacotes, collapse = ", "))
source("global.R")
install.packages("taskscheduleR")
taskscheduler_create(
taskname = "SIAM_Sync_GSheets",
rscript = "C:/caminho/para/sincronizar_supabase.R",
schedule = "MINUTE",
starttime = format(Sys.time() + 60, "%H:%M"),
modifier = 5
)
source("global.R")
